version: '3'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    stdin_open: true
    tty: true
    image: web
    container_name: web
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - "/app/node_modules"
      - ".:/app"
    networks:
      - app-network

    environment:
      - CHOKIDAR_USEPOLLING=true
      - BACKEND_URL=http://204.152.197.187:8000/api/

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nodejs
    networks:
      - app-network

  express:
    build:
      context: .
      dockerfile: Dockerfile.dev
    stdin_open: true
    tty: true
    command: "node server.js"
    ports:
      - "3000:3000"
    volumes:
      - "/app/node_modules"
      - ".:/app"
    networks:
      - app-network
    depends_on:
      - web

  peerjs:
    build:
      context: .
      dockerfile: Dockerfile.dev
    stdin_open: true
    tty: true
    command: >
               sh -c "npm install peer -g && peerjs --port 3001"

    ports:
      - "3001:3001"
    networks:
      - app-network
    
    depends_on:
      - express
      - web


volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/class4everyone/node_project/views/
      o: bind

networks:
  app-network:
    driver: bridge
